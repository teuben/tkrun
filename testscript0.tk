#! /usr/local/bin/wish -f
# This script has been generated by tkrun,
# it is probably not a good idea to edit this file
# TkRun Version 0.1a 20-aug-97 PJT
#
#
set startup $env(HOME)/.tkrunrc
if {[file exists $startup]} {source $startup}
frame .menu
pack .menu

button  .menu.run   -text Run  -bg green    -command my_run
button  .menu.save  -text Save -bg blue     -command my_save
button  .menu.quit  -text Quit -bg red      -command exit
button  .menu.help  -text Help -bg yellow   -command my_help

pack .menu.run .menu.save .menu.quit -side left  -fill x
pack .menu.help -side right -fill x

frame .keys
pack .keys

#>  IFILE   in=
frame .keys.in -borderwidth {2} -relief {raised}
pack .keys.in
frame .keys.in.frame
global var_in
entry .keys.in.frame.val -textvariable var_in  -relief {sunken}
button .keys.in.frame.but -text Browse... -command new_var_in
pack append .keys.in.frame .keys.in.frame.but {left frame center filly} .keys.in.frame.val {top frame center expand fill}
label .keys.in.key -text in:
bind .keys.in.key <1> "my_help 0 $var_in"
bind .keys.in.key <2> "my_help 1 $var_in"
bind .keys.in.key <3> "set var_in \"\"; focus .keys.in.frame.val"
pack append .keys.in .keys.in.key {left frame center filly} .keys.in.frame {top frame center fillx}
pack append .keys .keys.in {top frame center fill}
#>  OFILE   out=
frame .keys.out -borderwidth {2} -relief {raised}
pack .keys.out
frame .keys.out.frame
global var_out
entry .keys.out.frame.val -textvariable var_out  -relief {sunken}
button .keys.out.frame.but -text Browse... -command new_var_out
pack append .keys.out.frame .keys.out.frame.but {left frame center filly} .keys.out.frame.val {top frame center expand fill}
label .keys.out.key -text out:
bind .keys.out.key <1> "my_help 0 $var_out"
bind .keys.out.key <2> "my_help 1 $var_out"
bind .keys.out.key <3> "set var_out \"\"; focus .keys.out.frame.val"
pack append .keys.out .keys.out.key {left frame center filly} .keys.out.frame {top frame center fillx}
pack append .keys .keys.out {top frame center fill}
#>  ENTRY   eps=0.01
frame .keys.eps -borderwidth {2} -relief {raised}
pack .keys.eps
frame .keys.eps.frame
global var_eps
set var_eps 0.01
entry .keys.eps.frame.val -textvariable var_eps  -relief {sunken}
pack append .keys.eps.frame .keys.eps.frame.val {top frame center expand fill}
label .keys.eps.key -text eps:
bind .keys.eps.key <1> "my_help 0 $var_eps"
bind .keys.eps.key <2> "my_help 1 $var_eps"
bind .keys.eps.key <3> "set var_eps \"\"; focus .keys.eps.frame.val"
pack append .keys.eps .keys.eps.key {left frame center filly} .keys.eps.frame {top frame center fillx}
pack append .keys .keys.eps {top frame center fill}
#>  RADIO   mode=gauss              gauss,newton,leibniz
frame .keys.mode -borderwidth {2} -relief {raised}
pack .keys.mode
frame .keys.mode.frame
global var_mode
set var_mode gauss
radiobutton .keys.mode.frame.gauss -variable var_mode -text gauss -value gauss -anchor w 
radiobutton .keys.mode.frame.newton -variable var_mode -text newton -value newton -anchor w 
radiobutton .keys.mode.frame.leibniz -variable var_mode -text leibniz -value leibniz -anchor w 
pack append .keys.mode.frame  .keys.mode.frame.gauss {left frame center filly} .keys.mode.frame.newton {left frame center filly} .keys.mode.frame.leibniz {top frame center fillx}
label .keys.mode.key -text mode:
bind .keys.mode.key <1> "my_help 0 $var_mode"
bind .keys.mode.key <2> "my_help 1 $var_mode"
bind .keys.mode.key <3> "set var_mode \"\""
pack append .keys.mode .keys.mode.key {left frame center filly} .keys.mode.frame {top frame center fillx}
pack append .keys .keys.mode {top frame center fill}
#>  CHECK   options=mean,sigma      sum,mean,sigma,skewness,kurtosis
frame .keys.options -borderwidth {2} -relief {raised}
pack .keys.options
frame .keys.options.frame
global var_options
set var_options ""
foreach i [split mean,sigma ","] {
   set var_options_$i 1
}
checkbutton .keys.options.frame.sum -variable var_options_sum -text sum -command new_var_options 
set arr_var_options(var_options_sum) sum
global var_options_sum
checkbutton .keys.options.frame.mean -variable var_options_mean -text mean -command new_var_options 
set arr_var_options(var_options_mean) mean
global var_options_mean
checkbutton .keys.options.frame.sigma -variable var_options_sigma -text sigma -command new_var_options 
set arr_var_options(var_options_sigma) sigma
global var_options_sigma
checkbutton .keys.options.frame.skewness -variable var_options_skewness -text skewness -command new_var_options 
set arr_var_options(var_options_skewness) skewness
global var_options_skewness
checkbutton .keys.options.frame.kurtosis -variable var_options_kurtosis -text kurtosis -command new_var_options 
set arr_var_options(var_options_kurtosis) kurtosis
global var_options_kurtosis
global arr_var_options
pack append .keys.options.frame  .keys.options.frame.sum {left frame center filly} .keys.options.frame.mean {left frame center filly} .keys.options.frame.sigma {left frame center filly} .keys.options.frame.skewness {left frame center filly} .keys.options.frame.kurtosis {top frame center fillx}
label .keys.options.key -text options:
bind .keys.options.key <1> "my_help 0 $var_options"
bind .keys.options.key <2> "my_help 1 $var_options"
bind .keys.options.key <3> "set var_options \"\""
pack append .keys.options .keys.options.key {left frame center filly} .keys.options.frame {top frame center fillx}
pack append .keys .keys.options {top frame center fill}
#>  SCALE   n=3.141592              0:10:0.01
set var_n 3.141592
frame .keys.n -borderwidth {2} -relief {raised}
pack .keys.n
frame .keys.n.frame
global var_n
scale .keys.n.frame.val -variable var_n  -relief {sunken} -from 0 -to 10 -resolution 0.01 -length 10c -orient horizontal
pack append .keys.n.frame .keys.n.frame.val {top frame center expand fill}
label .keys.n.key -text n:
bind .keys.n.key <1> "my_help 0 $var_n"
bind .keys.n.key <2> "my_help 1 $var_n"
bind .keys.n.key <3> "set var_n 0; focus .keys.n.frame.val"
pack append .keys.n .keys.n.key {left frame center filly} .keys.n.frame {top frame center fillx}
pack append .keys .keys.n {top frame center fill}
#>  -EXEC
### Warning: unknown tag -EXEC
#>  +EXEC
### Warning: unknown tag +EXEC
set keyList { .keys.eps.frame.val }
proc my_run {} {
  puts "my_run:"
  global var_in
  lappend args "in=$var_in"
  global var_out
  lappend args "out=$var_out"
  global var_eps
  lappend args "eps=$var_eps"
  global var_mode
  lappend args "mode=$var_mode"
  global var_options
  lappend args "options=$var_options"
  global var_n
  lappend args "n=$var_n"
   eval exec <@stdin >@stdout testscript $args
}
# This file is temporary; for merging into main tkrun script
#  For: #>  IFILE   in=
proc new_var_in {} {
   global var_in
   set var_in [tk_getOpenFile -parent .keys.in.frame.val]
   focus .keys.in.frame.val
}
#  For: #>  OFILE   out=
proc new_var_out {} {
   global var_out
   set var_out [tk_getSaveFile -parent .keys.out.frame.val]
   focus .keys.out.frame.val
}
# For: #>  CHECK   options=mean,sigma      sum,mean,sigma,skewness,kurtosis
proc new_var_options {} {
   global arr_var_options var_options
   set var_options ""
   global var_options_sum
   if {$var_options_sum} { lappend var_options $arr_var_options(var_options_sum)}
   global var_options_mean
   if {$var_options_mean} { lappend var_options $arr_var_options(var_options_mean)}
   global var_options_sigma
   if {$var_options_sigma} { lappend var_options $arr_var_options(var_options_sigma)}
   global var_options_skewness
   if {$var_options_skewness} { lappend var_options $arr_var_options(var_options_skewness)}
   global var_options_kurtosis
   if {$var_options_kurtosis} { lappend var_options $arr_var_options(var_options_kurtosis)}
   set var_options [join $var_options ","]
}
focus [lindex $keyList 0]

foreach w $keyList {
    if {1} {
       bind $w <Return> {tab $keyList}
       $w insert end {}
    }
}

proc tab list {
    set i [lsearch -exact $list [focus]]
    incr i
    if {$i >= [llength $list]} {
        set i 0
    }
    focus [lindex $list $i]
}

proc my_save {} {
  puts "my_save:"
}
proc my_help {lev} {
  puts "my_help:"
}
# end of script 

# Found 6 widgets
# 11: in=
# 11: out=
# 1: eps=0.01
# 3: mode=gauss
# 4: options=mean,sigma
# 2: n=3.141592
